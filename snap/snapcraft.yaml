name: trex
base: core24
adopt-info: trex
title: trex (UNOFFICIAL)
summary: A terminal-based recreation of Google Chrome's famous T-Rex game
license: MIT
contact: https://github.com/brlin-tw/trex-snap/issues
website: https://github.com/brlin-tw/trex-snap
issues: https://github.com/brlin-tw/trex-snap/issues
description: |
  **Features**

  - Classic T-Rex Gameplay - Jump and duck to avoid obstacles
  - Enhanced Mechanics - Power-ups, fire abilities, and invincibility
  - Scoring System - Track your high scores and level progression
  - Rich Graphics - ASCII art sprites with full color support
  - Zero Dependencies - No external libraries required

  **Quick Start**

  Running:

      # Play the game (optimized rendering)
      trex

      # Compatibility mode for older systems
      TUI_DISABLE_WRITEV=1 trex

  **Controls**

  - Space or Up Arrow: Jump over obstacles
  - Down Arrow: Duck under pterodactyls
  - ESC or Q: Return to menu / Quit game

  **Snap distribution-specific information**

  This is NOT an official distribution of trex, please refer to the snap's own issue tracker for support: https://github.com/brlin-tw/trex-snap/issues

grade: stable
confinement: strict

apps:
  trex:
    command: bin/trex

parts:
  trex:
    # Application does not support install target yet
    #plugin: make
    plugin: nil
    source: https://github.com/jserv/trex.git
    override-pull: |
      if ! craftctl default; then
        printf 'Error: Unable to run the default logic of the pull step.\n' 1>&2
        exit 2
      fi

      if ! app_version="$(git describe --always --tags --dirty)"; then
        printf 'Error: Unable to describe the application version.\n' 1>&2
        exit 2
      fi
      app_version="${app_version#v}"

      if ! packaging_revision="$(git -C "${CRAFT_PROJECT_DIR}" describe --always --abbrev=4 --dirty=-d)"; then
        printf 'Error: Unable to get the packaging revision.\n' 1>&2
        exit 2
      fi

      snap_version="${app_version}+s${packaging_revision}"
      if ! craftctl set version="${snap_version}"; then
        printf 'Error: Unable to set the snap version.\n' 1>&2
        exit 2
      fi

      printf 'Info: Snap version determined to be: %s\n' "${snap_version}"

    override-build: |
      if ! make --jobs="$(nproc)"; then
        printf 'Error: Build failed.\n' 1>&2
        exit 2
      fi

      if ! install --directory --owner=root --group=root --mode='0755' \
        "${SNAPCRAFT_PART_INSTALL}/bin"; then
        printf 'Error: Unable to install the bin directory.\n' 1>&2
        exit 2
      fi

      if ! install --owner=root --group=root --mode='0755' \
        trex "${SNAPCRAFT_PART_INSTALL}/bin/trex"; then
        printf 'Error: Unable to install the trex binary.\n' 1>&2
        exit 2
      fi
